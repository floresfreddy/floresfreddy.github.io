{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/freddyflores/Desktop/Shopify/shopify-challenge/src/components/Main.js\";\nimport React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport MovieList from \"./MovieList.js\";\nimport Nominations from \"./Nominations.js\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      favorites: []\n    };\n\n    this.saveToLocalStorage = items => {\n      localStorage.setItem('react-movie-app-favorites', JSON.stringify(items));\n    };\n\n    this.addFavoriteMovie = movie => {\n      const newFavoriteList = [...this.state.favorites, movie];\n      this.setState({\n        favorites: newFavoriteList\n      });\n      this.saveToLocalStorage(newFavoriteList);\n    };\n\n    this.removeFavoriteMovie = movie => {\n      const newFavoriteList = this.state.favorites.filter(favorite => favorite.imdbID !== movie.imdbID);\n      this.setState({\n        favorites: newFavoriteList\n      });\n      this.saveToLocalStorage(newFavoriteList);\n    };\n\n    this.getMovieRequest = async searchValue => {\n      if (searchValue.length > 2) {\n        const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=263d22d8`;\n      } else {}\n\n      const response = await fetch(url);\n      const responseJson = await response.json();\n\n      if (responseJson.Search) {\n        this.setState({\n          movies: responseJson.Search\n        });\n      }\n    };\n\n    this.searchMovies = search => {\n      if (search.length > 2) {\n        fetch(`http://www.omdbapi.com/?s=${search}&apikey=6ec34811`).then(res => res.json()).then(movies => {\n          this.setState({\n            movies: movies.Search\n          });\n        }).catch(e => console.log(e));\n      } else if (search.length !== 0) {\n        fetch(`http://www.omdbapi.com/?t=${search}&apikey=6ec34811`).then(res => res.json()).then(movie => {\n          this.setState({\n            movies: [movie]\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(JSON.parse(localStorage.getItem('react-movie-app-favorites')));\n    let faves = JSON.parse(localStorage.getItem('react-movie-app-favorites'));\n    this.setState({\n      favorites: [...faves]\n    }, () => console.log(this.state.favorites));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            order: 0,\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            searching: this.searchMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n            movies: this.state.movies,\n            favorites: this.state.favorites,\n            handleFavorites: this.addFavoriteMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            order: 1,\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Nominations, {\n            movies: this.state.favorites,\n            handleFavorites: this.removeFavoriteMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/freddyflores/Desktop/Shopify/shopify-challenge/src/components/Main.js"],"names":["React","Component","Search","MovieList","Nominations","Main","state","movies","favorites","saveToLocalStorage","items","localStorage","setItem","JSON","stringify","addFavoriteMovie","movie","newFavoriteList","setState","removeFavoriteMovie","filter","favorite","imdbID","getMovieRequest","searchValue","length","url","response","fetch","responseJson","json","searchMovies","search","then","res","catch","e","console","log","componentDidMount","parse","getItem","faves","render","order","flexGrow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport MovieList from \"./MovieList.js\"\nimport Nominations from \"./Nominations.js\"\n\n\nclass Main extends Component {\n  \n    state = {\n        movies: [],\n        favorites:[]\n    }\n\n    saveToLocalStorage = (items) => {\n        localStorage.setItem('react-movie-app-favorites', JSON.stringify(items));\n    };\n\n    addFavoriteMovie = (movie) => {\n        const newFavoriteList = [...this.state.favorites, movie];\n        this.setState({\n            favorites: newFavoriteList\n        })\n        this.saveToLocalStorage(newFavoriteList);\n    };\n\n    removeFavoriteMovie = (movie) => {\n        const newFavoriteList = this.state.favorites.filter(\n            (favorite) => favorite.imdbID !== movie.imdbID\n        );\n\n        this.setState({\n            favorites: newFavoriteList\n        });\n        this.saveToLocalStorage(newFavoriteList);\n    };\n\n    getMovieRequest = async (searchValue) => {\n        if(searchValue.length > 2){\n\t\t    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=263d22d8`;\n        }\n        else{\n            \n        }\n\t\tconst response = await fetch(url);\n\t\tconst responseJson = await response.json();\n\n\t\tif (responseJson.Search) {\n\t\t\tthis.setState({\n                movies: responseJson.Search});\n\t\t}\n\t};\n\n    searchMovies = (search) => {\n        \n        if(search.length > 2){\n        fetch(`http://www.omdbapi.com/?s=${search}&apikey=6ec34811`)\n        .then(res => res.json())\n        .then(movies => {\n            this.setState({\n            movies: movies.Search,\n            })\n        }).catch((e)=> console.log(e))\n        }\n        else if(search.length !== 0){\n            fetch(`http://www.omdbapi.com/?t=${search}&apikey=6ec34811`)\n            .then(res => res.json())\n            .then(movie => {\n            this.setState({\n                movies: [movie],\n            })\n            })\n        }\n    }\n    \n    componentDidMount(){\n        console.log(JSON.parse(localStorage.getItem('react-movie-app-favorites')))\n        let faves = JSON.parse(localStorage.getItem('react-movie-app-favorites'))\n        this.setState({\n            favorites: [...faves]\n        }, () => console.log(this.state.favorites))\n    }\n\n    render() {\n        return (\n        <div>   \n            <div className='flex-container'>\n                <div style={{order: 0, flexGrow:1}}>\n                    <Search searching = {this.searchMovies} />\n                    <MovieList movies = {this.state.movies} favorites = {this.state.favorites} handleFavorites = {this.addFavoriteMovie}/>\n                </div>\n                <div style={{order: 1, flexGrow:1}}>\n                    <Nominations movies = {this.state.favorites} handleFavorites = {this.removeFavoriteMovie}/>     \n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}