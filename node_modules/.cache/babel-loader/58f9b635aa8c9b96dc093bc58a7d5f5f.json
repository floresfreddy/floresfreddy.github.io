{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/freddyflores/Desktop/Shopify/shopify-challenge/src/components/Main.js\";\nimport React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport MovieList from \"./MovieList.js\";\nimport Nominations from \"./Nominations.js\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      favorites: []\n    };\n\n    this.saveToLocalStorage = items => {\n      localStorage.setItem('react-movie-app-favorites', JSON.stringify(items));\n    };\n\n    this.addFavoriteMovie = movie => {\n      const newFavoriteList = [...this.state.favorites, movie];\n      this.setState({\n        favorites: newFavoriteList\n      });\n      this.saveToLocalStorage(newFavoriteList);\n    };\n\n    this.removeFavoriteMovie = movie => {\n      const newFavoriteList = this.state.favorites.filter(favorite => favorite.imdbID !== movie.imdbID);\n      this.setState({\n        favorites: newFavoriteList\n      });\n      this.saveToLocalStorage(newFavoriteList);\n    };\n\n    this.searchMovies = async search => {\n      // if(search.length > 2){\n      // fetch(`http://www.omdbapi.com/?s=${search}&apikey=6ec34811`)\n      // .then(res => res.json())\n      // .then(movies => {\n      //     this.setState({\n      //     movies: movies.Search,\n      //     })\n      // }).catch(()=> console.log(\"error\"))\n      // }\n      // else{\n      //     fetch(`http://www.omdbapi.com/?t=${search}&apikey=6ec34811`)\n      //     .then(res => res.json())\n      //     .then(movie => {\n      //     this.setState({\n      //         movies: [movie],\n      //     })\n      //     })\n      // }\n      const response = await fetch(url);\n      const responseJson = await response.json();\n\n      if (responseJson.Search) {\n        this.setState({\n          movies: responseJson.Search\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(JSON.parse(localStorage.getItem('react-movie-app-favorites')));\n    let faves = JSON.parse(localStorage.getItem('react-movie-app-favorites'));\n    this.setState({\n      favorites: [...faves]\n    }, () => console.log(this.state.favorites));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            order: 0,\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            searching: this.searchMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n            movies: this.state.movies,\n            favorites: this.state.favorites,\n            handleFavorites: this.addFavoriteMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            order: 1,\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Nominations, {\n            movies: this.state.favorites,\n            handleFavorites: this.removeFavoriteMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/freddyflores/Desktop/Shopify/shopify-challenge/src/components/Main.js"],"names":["React","Component","Search","MovieList","Nominations","Main","state","movies","favorites","saveToLocalStorage","items","localStorage","setItem","JSON","stringify","addFavoriteMovie","movie","newFavoriteList","setState","removeFavoriteMovie","filter","favorite","imdbID","searchMovies","search","response","fetch","url","responseJson","json","componentDidMount","console","log","parse","getItem","faves","render","order","flexGrow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport MovieList from \"./MovieList.js\"\nimport Nominations from \"./Nominations.js\"\n\n\nclass Main extends Component {\n  \n    state = {\n        movies: [],\n        favorites:[]\n    }\n\n    saveToLocalStorage = (items) => {\n        localStorage.setItem('react-movie-app-favorites', JSON.stringify(items));\n    };\n\n    addFavoriteMovie = (movie) => {\n        const newFavoriteList = [...this.state.favorites, movie];\n        this.setState({\n            favorites: newFavoriteList\n        })\n        this.saveToLocalStorage(newFavoriteList);\n    };\n\n    removeFavoriteMovie = (movie) => {\n        const newFavoriteList = this.state.favorites.filter(\n            (favorite) => favorite.imdbID !== movie.imdbID\n        );\n\n        this.setState({\n            favorites: newFavoriteList\n        });\n        this.saveToLocalStorage(newFavoriteList);\n    };\n\n    searchMovies = async (search) => {\n        // if(search.length > 2){\n        // fetch(`http://www.omdbapi.com/?s=${search}&apikey=6ec34811`)\n        // .then(res => res.json())\n        // .then(movies => {\n        //     this.setState({\n        //     movies: movies.Search,\n        //     })\n        // }).catch(()=> console.log(\"error\"))\n        // }\n        // else{\n        //     fetch(`http://www.omdbapi.com/?t=${search}&apikey=6ec34811`)\n        //     .then(res => res.json())\n        //     .then(movie => {\n        //     this.setState({\n        //         movies: [movie],\n        //     })\n        //     })\n        // }\n\n        const response = await fetch(url);\n        const responseJson = await response.json();\n        if (responseJson.Search) {\n\t\t\tthis.setState({\n                movies: responseJson.Search});\n\t\t}\n    }\n    \n    componentDidMount(){\n        console.log(JSON.parse(localStorage.getItem('react-movie-app-favorites')))\n        let faves = JSON.parse(localStorage.getItem('react-movie-app-favorites'))\n        this.setState({\n            favorites: [...faves]\n        }, () => console.log(this.state.favorites))\n    }\n\n    render() {\n        return (\n        <div>   \n            <div className='flex-container'>\n                <div style={{order: 0, flexGrow:1}}>\n                    <Search searching = {this.searchMovies} />\n                    <MovieList movies = {this.state.movies} favorites = {this.state.favorites} handleFavorites = {this.addFavoriteMovie}/>\n                </div>\n                <div style={{order: 1, flexGrow:1}}>\n                    <Nominations movies = {this.state.favorites} handleFavorites = {this.removeFavoriteMovie}/>     \n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}