{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/freddyflores/Desktop/Shopify/shopify-challenge/src/components/Main.js\";\nimport React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport MovieList from \"./MovieList.js\";\nimport Nominations from \"./Nominations.js\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      favorites: [],\n      search: ''\n    };\n\n    this.saveToLocalStorage = items => {\n      localStorage.setItem('react-movie-app-favorites', JSON.stringify(items));\n    };\n\n    this.addFavoriteMovie = movie => {\n      const newFavoriteList = [...this.state.favorites, movie];\n      this.setState({\n        favorites: newFavoriteList\n      });\n      this.saveToLocalStorage(newFavoriteList);\n    };\n\n    this.removeFavoriteMovie = movie => {\n      const newFavoriteList = this.state.favorites.filter(favorite => favorite.imdbID !== movie.imdbID);\n      this.setState({\n        favorites: newFavoriteList\n      });\n      this.saveToLocalStorage(newFavoriteList);\n    };\n\n    this.searchMovies = search => {\n      if (search.length > 2) {\n        fetch(`http://www.omdbapi.com/?s=${search}&apikey=6ec34811`).then(res => res.json()).then(movies => {\n          if (movies.Response !== 'False') this.setState({\n            movies: movies.Search,\n            search: search\n          });\n        });\n      } else if (search.length !== 0) {\n        fetch(`http://www.omdbapi.com/?t=${search}&apikey=6ec34811`).then(res => res.json()).then(movie => {\n          if (movie) {\n            this.setState({\n              movies: [movie],\n              search: search\n            });\n          }\n        });\n      } else {\n        this.setState({\n          movies: []\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(JSON.parse(localStorage.getItem('react-movie-app-favorites')));\n    let faves = JSON.parse(localStorage.getItem('react-movie-app-favorites'));\n    this.setState({\n      favorites: [...faves]\n    }, () => console.log(this.state.favorites));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        searching: this.searchMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          style: {\n            order: 0,\n            flexGrow: 1\n          },\n          children: [\"Results for \\\"\\\"\", /*#__PURE__*/_jsxDEV(MovieList, {\n            movies: this.state.movies,\n            favorites: this.state.favorites,\n            handleFavorites: this.addFavoriteMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          style: {\n            order: 1,\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Nominations, {\n            movies: this.state.favorites,\n            handleFavorites: this.removeFavoriteMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/freddyflores/Desktop/Shopify/shopify-challenge/src/components/Main.js"],"names":["React","Component","Search","MovieList","Nominations","Main","state","movies","favorites","search","saveToLocalStorage","items","localStorage","setItem","JSON","stringify","addFavoriteMovie","movie","newFavoriteList","setState","removeFavoriteMovie","filter","favorite","imdbID","searchMovies","length","fetch","then","res","json","Response","componentDidMount","console","log","parse","getItem","faves","render","order","flexGrow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport MovieList from \"./MovieList.js\"\nimport Nominations from \"./Nominations.js\"\n\n\nclass Main extends Component {\n  \n    state = {\n        movies: [],\n        favorites:[],\n        search :''\n    }\n\n    saveToLocalStorage = (items) => {\n        localStorage.setItem('react-movie-app-favorites', JSON.stringify(items));\n    };\n\n    addFavoriteMovie = (movie) => {\n        const newFavoriteList = [...this.state.favorites, movie];\n        this.setState({\n            favorites: newFavoriteList\n        })\n        this.saveToLocalStorage(newFavoriteList);\n    };\n\n    removeFavoriteMovie = (movie) => {\n        const newFavoriteList = this.state.favorites.filter(\n            (favorite) => favorite.imdbID !== movie.imdbID\n        );\n\n        this.setState({\n            favorites: newFavoriteList\n        });\n        this.saveToLocalStorage(newFavoriteList);\n    };\n\n    searchMovies = (search) => {\n        \n        if(search.length > 2){\n            fetch(`http://www.omdbapi.com/?s=${search}&apikey=6ec34811`)\n            .then(res => res.json()) \n            .then(movies => {\n                if(movies.Response !== 'False')\n                this.setState({\n                movies: movies.Search,\n                search: search\n            })\n        })\n    }\n    else if(search.length !== 0){\n        fetch(`http://www.omdbapi.com/?t=${search}&apikey=6ec34811`)\n        .then(res => res.json())\n        .then(movie => {\n            if(movie){\n                this.setState({\n                    movies: [movie],\n                    search: search\n                })\n            }\n            })\n        }\n        else {\n            this.setState({\n                movies: []\n            })\n        }\n    }\n    \n    componentDidMount(){\n        console.log(JSON.parse(localStorage.getItem('react-movie-app-favorites')))\n        let faves = JSON.parse(localStorage.getItem('react-movie-app-favorites'))\n        this.setState({\n            favorites: [...faves]\n        }, () => console.log(this.state.favorites))\n    }\n\n    render() {\n        return (\n        <div className= 'main-container'>   \n            <Search searching = {this.searchMovies} />\n            <div className='flex-container'>\n                <div className=\"column\" style={{order: 0, flexGrow:1}}>\n                    Results for \"\"\n                    <MovieList movies = {this.state.movies} favorites = {this.state.favorites} handleFavorites = {this.addFavoriteMovie}/>\n                </div>\n                <div className=\"column\" style={{order: 1, flexGrow:1}}>\n                    <Nominations movies = {this.state.favorites} handleFavorites = {this.removeFavoriteMovie}/>     \n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}